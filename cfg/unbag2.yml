unbag2:
  ros__parameters:
    # the mode of unbag:
    # "post": reads bag files (paths specified by "files" parameter) and parses their data into files.
    #         In post mode, you need to specify the files to read as a parameter "files" either in this yaml file or as a launch file argument.
    #         This is a string of a list of paths split by spaces.
    #         - Relative paths are relative to the current working directory.
    #         - Wildcards ("*") are allowed.
    #         - Paths to directories will find all bag files in the directory (only 1 level)
    # "live": directly subscribes to many topics and parses them directly into files. No bags in the middle.
    mode: "post"
    # the target path to put files in. Relative paths are relative to the current working directory.
    target_dir: "."
    # when set to true, unbag will split all files by bag file. only available in "post" mode
    split_by_bag: false
    # uncomment ONE OF the following to enable explicit filtering of topics:
    # include explicitly chooses the topics that are un-bagged
    # exclude filters out the specified topics and un-bags the rest.
    # leaving both commented will simply unbag all topics.
    # having both UN-commented will result in a fatal error.
#    include:
#    exclude:
    gps_pipe:
      # an optional parameter that can be used to disable a plugin.
      enabled: true
      # when set to true, if the covariance is unknown, remove it from the JSON entry
      remove_covariance: false
      # split the bag files by the set amount of seconds, if -1, the pipe will not split by time
      time: -1.
      # the file name under which to save the JSON. some values will be substituted:
      # {topic}: the fully qualified input topic, with slashes replaced by underscores.
      # {seq} the sequence identifier of the file, if there are splits, this number represents this file's order in the list.
      file_name: "{topic}_{seq}.json"
    # each pipe has its own configuration tab in the config, according to its name.
    # all pipes have "enabled"
    # JSON pipes have "time", "file_name"
    # and covariance oriented pipes also have "remove_covariance"
    odom_pipe:
      enabled: true
      remove_covariance: false
      time: -1.
      file_name: "{topic}_{seq}.json"
    imu_pipe:
      enabled: true
      remove_covariance: false
      time: -1.
      file_name: "{topic}_{seq}.json"
    logger:
      status_bar:
        # (post) progress bar for all bags.
        job_progress_bar: true
        # (post) % messages complete for job.
        job_percent_done: true
        # (post) progress bar for messages in current bag.
        bag_progress_bar: true
        # (post) % messages complete in current bag.
        bag_percent_done: true
        # (post) how much time unbag predicts is left for completion.
        estimated_time_left: true
        # (post) # of bags processed.
        bags_done: false
      # (post,live) starter message that job is starting
      job_start: true
      live_updates:
        # (post,live) if a topic was not successfully processed by any pipe, this will indicate it.
        failed_topics: true
        # (post) prints the URI of the bag being processed.
        # (live) prints that unbag is in live mode.
        bag_name: false
      after_job:
        # (post, live) prints that unbag was either terminated of completed.
        job_done: false
        # (post, live) prints the number of messages processed per topic
        num_messages_processed: true
        # (post, live) prints topics that failed processing at least once.
        failed_topics: true